C51 COMPILER V9.59.0.0   EVMCODE_C                                                         10/10/2018 22:26:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE EVMCODE_C
OBJECT MODULE PLACED IN ..\HEX_Folder\evmCode_C.obj
COMPILER INVOKED BY: F:\Software\Keil_uVision\keil_v5\C51\BIN\C51.EXE evmCode_C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\evmCode_C.lst) TABS(2) OBJECT(..\HEX_Folder\evmCode_C.obj)

line level    source

   1          // Program to make voting machine using seven segment
   2          #include <reg51.h>
   3          #define msec 1
   4          
   5          sbit switch_1=P3^2;//Input pins for four candidates
   6          sbit switch_2=P3^3;
   7          sbit switch_3=P3^4;
   8          sbit switch_4=P3^5;
   9          
  10          sbit dig_ctrl_4=P1^0;//Declare the control pins of seven segments
  11          sbit dig_ctrl_3=P1^1;
  12          sbit dig_ctrl_2=P1^2;
  13          sbit dig_ctrl_1=P1^3;
  14          
  15          unsigned int vote_1,vote_2,vote_3,vote_4;
  16          
  17          unsigned int digi_val[10]={0x40,0xF9,0x24,0x30,0x19,0x12,0x02,0xF8,0x00,0x10};
  18          unsigned int dig_1,dig_2,dig_3,dig_4;
  19          
  20          
  21          
  22          void delay(unsigned int count)// Time delay function
  23          {
  24   1        unsigned int j,k;
  25   1        for (j=0;j<=count;j++)
  26   1        for (k=0;k<=50;k++);
  27   1      }
  28          
  29          void digi_out(unsigned int current_num)// Funtion to display total votes
  30          {
  31   1        unsigned int dig_disp;
  32   1        dig_disp=current_num;
  33   1        P2 = digi_val[current_num];
  34   1        delay(msec);
  35   1      }
  36          
  37          
  38          void calc_vote()// Funtion to count the number of votes
  39          {
  40   1        while(1)
  41   1        {
  42   2          if (switch_1==0)
  43   2          {
  44   3            while (switch_1 == 0);//check if switch 1 is pressed
  45   3            {
  46   4              vote_1 = vote_1 + 1;
  47   4              if(vote_1==10)
  48   4              vote_1=0;
  49   4            }
  50   3          }
  51   2      
  52   2          if (switch_2==0)//check if switch 2 is pressed
  53   2          {
  54   3            while (switch_2 == 0);
C51 COMPILER V9.59.0.0   EVMCODE_C                                                         10/10/2018 22:26:22 PAGE 2   

  55   3            {
  56   4              vote_2 = vote_2 + 1;
  57   4              if(vote_2==10)
  58   4              vote_2=0;
  59   4            }
  60   3          }
  61   2      
  62   2          if (switch_3==0)//check if switch 3 is pressed
  63   2          {
  64   3            while (switch_3 == 0);
  65   3            {
  66   4              vote_3 = vote_3 + 1;
  67   4              if(vote_3==10)
  68   4              vote_3=0;
  69   4            }
  70   3          }
  71   2      
  72   2          if (switch_4==0)//check if switch 4 is pressed
  73   2          {
  74   3            while (switch_4 == 0);
  75   3            {
  76   4              vote_4 = vote_4 + 1;
  77   4              if(vote_4==10)
  78   4              vote_4=0;
  79   4            }
  80   3          }
  81   2      
  82   2        dig_ctrl_1 = 1;
  83   2        dig_ctrl_3 = dig_ctrl_2 = dig_ctrl_4 = 0;
  84   2        digi_out(vote_1);
  85   2        dig_ctrl_2 = 1;
  86   2        dig_ctrl_4 = dig_ctrl_3 = dig_ctrl_1 = 0;
  87   2        digi_out(vote_2);
  88   2        dig_ctrl_3 = 1;
  89   2        dig_ctrl_2 = dig_ctrl_4 = dig_ctrl_1 = 0;
  90   2        digi_out(vote_3);
  91   2        dig_ctrl_4 = 1;
  92   2        dig_ctrl_3 = dig_ctrl_2 = dig_ctrl_1 = 0;
  93   2        digi_out(vote_4);
  94   2        }
  95   1      }
  96          
  97          
  98          void main()
  99          {
 100   1      vote_1 = vote_2 = vote_3 = vote_4 = 0;
 101   1      switch_1 = switch_2 = switch_3 = switch_4 = 1;// Initialize the input pins
 102   1      while(1)
 103   1      {
 104   2      calc_vote();
 105   2      }
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.59.0.0   EVMCODE_C                                                         10/10/2018 22:26:22 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
